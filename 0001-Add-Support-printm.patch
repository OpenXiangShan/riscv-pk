From 82eb497baf3b12b7d081f11b36d766e3c0d148a6 Mon Sep 17 00:00:00 2001
From: Wang Yang <wangyang@bosc.ac.cn>
Date: Tue, 12 Sep 2023 17:26:44 +0800
Subject: [PATCH] Add Support printm

Format string

Signed-off-by: Wang Yang <wangyang@bosc.ac.cn>
---
 printm.c | 130 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 printm.h |  16 +++++++
 2 files changed, 146 insertions(+)
 create mode 100644 printm.c
 create mode 100644 printm.h

diff --git a/printm.c b/printm.c
new file mode 100644
index 0000000..2b59413
--- /dev/null
+++ b/printm.c
@@ -0,0 +1,130 @@
+#include "printm.h"
+#include "serial.h"
+
+int vsnprintf(char* out, size_t n, const char* s, va_list vl)
+{
+  bool format = false;
+  bool longarg = false;
+  bool longlongarg = false;
+  size_t pos = 0;
+  for( ; *s; s++)
+  {
+    if(format)
+    {
+      switch(*s)
+      {
+        case 'l':
+          if (s[1] == 'l') {
+              longlongarg = true;
+              s++;
+          }
+          else
+              longarg = true;
+          break;
+        case 'p':
+          longarg = true;
+          if (++pos < n) out[pos-1] = '0';
+          if (++pos < n) out[pos-1] = 'x';
+        case 'x':
+        {
+          long num = longarg ? va_arg(vl, long) : va_arg(vl, int);
+          for(int i = 2*(longarg ? sizeof(long) : sizeof(int))-1; i >= 0; i--) {
+            int d = (num >> (4*i)) & 0xF;
+            if (++pos < n) out[pos-1] = (d < 10 ? '0'+d : 'a'+d-10);
+          }
+          longarg = false;
+          format = false;
+          break;
+        }
+        case 'd':
+        {
+          long long num;
+          if (longarg)
+              num = va_arg(vl, long);
+          else if (longlongarg)
+              num = va_arg(vl, long long);
+          else
+              num = va_arg(vl, int);
+          if (num < 0) {
+            num = -num;
+            if (++pos < n) out[pos-1] = '-';
+          }
+          long digits = 1;
+          for (long long nn = num; nn /= 10; digits++)
+            ;
+          for (int i = digits-1; i >= 0; i--) {
+            if (pos + i + 1 < n) out[pos + i] = '0' + (num % 10);
+            num /= 10;
+          }
+          pos += digits;
+          longarg = false;
+          longlongarg = false;
+          format = false;
+          break;
+        }
+        case 's':
+        {
+          const char* s2 = va_arg(vl, const char*);
+          while (*s2) {
+            if (++pos < n)
+              out[pos-1] = *s2;
+            s2++;
+          }
+          longarg = false;
+          format = false;
+          break;
+        }
+        case 'c':
+        {
+          if (++pos < n) out[pos-1] = (char)va_arg(vl,int);
+          longarg = false;
+          format = false;
+          break;
+        }
+        default:
+          break;
+      }
+    }
+    else if(*s == '%')
+      format = true;
+    else
+      if (++pos < n) out[pos-1] = *s;
+  }
+  if (pos < n)
+    out[pos] = 0;
+  else if (n)
+    out[n-1] = 0;
+  return pos;
+}
+
+int snprintf(char* out, size_t n, const char* s, ...)
+{
+  va_list vl;
+  va_start(vl, s);
+  int res = vsnprintf(out, n, s, vl);
+  va_end(vl);
+  return res;
+}
+
+void putstring(const char* s)
+{
+  while (*s)
+    serial_putchar(*s++);
+}
+
+void vprintm(const char* s, va_list vl)
+{
+  char buf[256];
+  vsnprintf(buf, sizeof buf, s, vl);
+  putstring(buf);
+}
+
+
+void printm(const char* s, ...)
+{
+  va_list vl;
+
+  va_start(vl, s);
+  vprintm(s, vl);
+  va_end(vl);
+}
diff --git a/printm.h b/printm.h
new file mode 100644
index 0000000..072916d
--- /dev/null
+++ b/printm.h
@@ -0,0 +1,16 @@
+#ifndef __PRINTM_H__
+#define __PRINTM_H__
+
+#include <stdio.h>
+#include <stdarg.h>
+#include <stdint.h>
+#include <string.h>
+#include <stdbool.h>
+
+//-----------------------------------------------------------------
+// Prototypes
+//-----------------------------------------------------------------
+void printm(const char* s, ...);
+int vsnprintf(char* out, size_t n, const char* s, va_list vl);
+
+#endif
-- 
2.25.1

